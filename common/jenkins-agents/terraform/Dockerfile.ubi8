FROM opendevstackorg/ods-jenkins-agent-base-ubi8:latest

LABEL maintainer="Erhard Wais <erhard.wais@boehringer-ingelheim.com>, Frank Joas <frank.joas@boehringer-ingelheim.com>, Josef Hartmann <josef.hartmann@boehringer-ingelheim.com>, Steve Taylor <steve.taylor@boehringer-ingelheim.com>"

# Labels consumed by Red Hat build service
LABEL com.redhat.component="jenkins-agent-terraform-ubi8-docker" \
      name="openshift/jenkins-agent-terraform-ubi8" \
      version="0.1" \
      architecture="x86_64" \
      release="1" \
      io.k8s.display-name="Jenkins Agent AWS Terraform" \
      io.k8s.description="The jenkins Agent image has terraform and other tools on top of the jenkins agent base image." \
      io.openshift.tags="openshift,jenkins,agent,terraform,aws"

ENV TERRAFORM_VERSION 0.13.5
ENV TERRAFORM_DOCS_VERSION v0.10.1
ENV PYTHON_VERSION 3.7.9
ENV RUBY_VERSION 2.6.6
ENV PACKER_VERSION 1.6.6
ENV CONSUL_VERSION 1.9.1
ENV TFENV_VERSION 2.0.0
ENV WKHTMLTOPDF_VERSION 0.12.5-1
ENV BUNDLER_VERSION 2.1.4
ENV GEM_HOME=/opt/bundle

ENV INSTALL_PKGS="yum-utils gcc make git-core zlib zlib-devel gcc-c++ patch readline readline-devel \
    libffi-devel openssl-devel make bzip2 autoconf automake libtool bison curl sqlite-devel"
ENV PATH=/opt/tfenv/bin:$PATH:$HOME/.rbenv/bin
ENV HOME=/home/jenkins

COPY python_requirements /tmp/requirements.txt

RUN set -x \
    && yum update -y \
    && yum upgrade -y \
    && yum install -y --setopt=tsflags=nodocs $INSTALL_PKGS \
    && yum clean all \
    && rm -rf /var/cache/yum/* \
    && ls -lisa /home/jenkins \
    && /bin/sleep 60

# Install PYTHON3
RUN cd /tmp \
    && curl -O https://www.python.org/ftp/python/${PYTHON_VERSION}/Python-${PYTHON_VERSION}.tgz \
    && tar xzf Python-${PYTHON_VERSION}.tgz -C / \
    && rm -rf Python-${PYTHON_VERSION}.tgz

RUN cd /Python-${PYTHON_VERSION} \
    && ./configure \
    && make altinstall \
    && ln -s /Python-${PYTHON_VERSION}/python /usr/local/sbin/python3 \
    && python3 -V \
    && chmod a+rx /Python-${PYTHON_VERSION} \
    && chmod a+rx /Python-${PYTHON_VERSION}/python

RUN curl "https://bootstrap.pypa.io/get-pip.py" -o "get-pip.py" \
    && python3 get-pip.py

# Upgrade PIP
RUN pip3 install --upgrade pip \
    && pip3 -V \
    && pip3 install virtualenv pycodestyle

# Configure PIP SSL validation
RUN pip config set global.cert /etc/ssl/certs/ca-bundle.crt \
    && pip config list

# Install python requirements
RUN python3 -m pip install -r /tmp/requirements.txt

# Install wkhtmltopdf
RUN wget -q -O /tmp/wkhtmltox-${WKHTMLTOPDF_VERSION}.centos7.x86_64.rpm https://github.com/wkhtmltopdf/wkhtmltopdf/releases/download/${WKHTMLTOPDF_VERSION%-*}/wkhtmltox-${WKHTMLTOPDF_VERSION}.centos7.x86_64.rpm \
    && yum install -y /tmp/wkhtmltox-${WKHTMLTOPDF_VERSION}.centos7.x86_64.rpm \
    && rm -f /tmp/wkhtmltox-${WKHTMLTOPDF_VERSION}.centos7.x86_64.rpm \
    && wkhtmltoimage -h \
    && yum clean all

# Install mustache v1.2.0
RUN rm -f /usr/local/bin/mustache \
    && wget -q -O /tmp/mustache.tar.gz https://github.com/cbroglie/mustache/releases/download/v1.2.0/mustache_1.2.0_linux_amd64.tar.gz \
    && tar -C /usr/local/bin -zxpf /tmp/mustache.tar.gz mustache \
    && chmod a+rx /usr/local/bin/mustache \
    && rm -f /tmp/mustache.tar.gz \
    && mustache -h

#Install awscli2
RUN curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip" \
    && unzip -qq awscliv2.zip \
    && ./aws/install \
    && rm -f awscliv2.zip \
    && rm -Rf ./aws

# Install Terraform
RUN wget --no-check-certificate -q -O /tmp/terraform.zip "https://releases.hashicorp.com/terraform/${TERRAFORM_VERSION}/terraform_${TERRAFORM_VERSION}_linux_amd64.zip" \
    && unzip /tmp/terraform.zip -d /usr/local/bin \
    && rm -rf /tmp/terraform.zip \
    && terraform -h

#Install tfenv and multiple terraform versions
RUN umask 0002 && cd /opt && git clone --branch v2.0.0 https://github.com/tfutils/tfenv.git \
    && /opt/tfenv/bin/tfenv install ${TERRAFORM_VERSION} \
    && /opt/tfenv/bin/tfenv install ${TERRAFORM_DEFAULT_VERSION} \
    && /opt/tfenv/bin/tfenv use ${TERRAFORM_DEFAULT_VERSION} \
    && chown -R 1001:0 /opt/tfenv && chmod +x /opt/tfenv/bin/* \
    && terraform --version \
    && tfenv list && \
    && tfenv list-remote

# Install Packer
RUN wget --no-check-certificate -q -O /tmp/packer.zip "https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip" \
    && unzip /tmp/packer.zip -d /usr/local/bin \
    && rm -rf /tmp/packer.zip \
    && packer -h

# Install Terraform Docs
RUN wget -q -O /usr/local/bin/terraform-docs https://github.com/segmentio/terraform-docs/releases/download/${TERRAFORM_DOCS_VERSION}/terraform-docs-${TERRAFORM_DOCS_VERSION}-linux-amd64 \
    && chmod +x /usr/local/bin/terraform-docs

# Install parallel
RUN wget --no-check-certificate -q -O /tmp/parallel-20160222-1.el7.noarch.rpm   https://download-ib01.fedoraproject.org/pub/epel/7/x86_64/Packages/p/parallel-20160222-1.el7.noarch.rpm \
    && rpm -Uvh /tmp/parallel-20160222-1.el7.noarch.rpm \
    && yum install -y parallel \
    && yum clean all
    
#Install jq
RUN yum -y install https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm \
    && yum install -y jq \
    && jq -Version \
    && yum clean all

#Install consul-cli
RUN wget -q "https://releases.hashicorp.com/consul/${CONSUL_VERSION}/consul_${CONSUL_VERSION}_linux_amd64.zip" \
    && unzip consul_${CONSUL_VERSION}_linux_amd64.zip -d /usr/local/bin \
    && chmod +x /usr/local/bin/consul && /usr/local/bin/consul --version
    
RUN chown -R 1001:0 $HOME \
    && chmod -R g+rw $HOME

RUN mkdir -p $GEM_HOME \
    && chmod 2770 $GEM_HOME

COPY Gemfile $GEM_HOME/
# COPY Gemfile Gemfile.lock $GEM_HOME/

RUN chown -R 1001:0 $GEM_HOME \
    && echo Skipping chmod -R g+rw $GEM_HOME \
    && ls -lisa /home/jenkins $GEM_HOME
    
### FIX me - use java home
# $JAVA_HOME/lib/security/cacerts
RUN ls /usr/lib/jvm/jre/lib/security/cacerts \
    && chown 1001:0 /usr/lib/jvm/jre/lib/security/cacerts \
    && chmod g+w /usr/lib/jvm/jre/lib/security/cacerts

USER 1001

ENV GEM_HOME=/opt/bundle

# setup ruby env and bundler gems
# RUBY https://syslint.com/blog/tutorial/how-to-install-ruby-on-rails-with-rbenv-on-centos-7-or-rhel-7/
RUN cd $HOME \
    && umask 0002 \ 
    && git clone https://github.com/rbenv/rbenv.git .rbenv \
    && echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> ~/.bash_profile \
    && echo 'eval "$(rbenv init -)"' >> ~/.bash_profile \
    && source ~/.bash_profile \
    && git clone https://github.com/rbenv/ruby-build.git ~/.rbenv/plugins/ruby-build \
    && echo 'export PATH="$HOME/.rbenv/plugins/ruby-build/bin:$PATH"' >> ~/.bash_profile \
    && source ~/.bash_profile \
    && rbenv install $RUBY_VERSION \
    && rbenv global $RUBY_VERSION \
    && gem install bundler \
    && bundle config default $BUNDLER_VERSION \
    && cd $GEM_HOME \
    && BUNDLE_SILENCE_ROOT_WARNING=true bundle install --full-index --path $GEM_HOME --jobs=8 \
    && rm -Rf /home/jenkins/.bundle/cache

